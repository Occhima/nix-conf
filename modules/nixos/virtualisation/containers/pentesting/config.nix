# NOTE: This entire config was  stolen from https://github.com/redcode-labs/RedNix
# I just need to addapt some stuff to my config
{
  lib,
  config,
  pkgs,
  ...
}:
let
  inherit (lib)
    mkIf
    types
    mkEnableOption
    mkOption
    ;
  cfg = config.modules.virtualisation.containers.pentesting;

in

{

  options.modules.virtualisation.containers.pentesting = {
    enable = mkEnableOption "Pentesting container environment";
    profiles = mkOption {
      type = types.listOf types.str;
      default = [
        "general"
        # "databases"
        # "exploits"
        # "git"
        # "port-scanners"
        "web"
      ];
      description = "List of pentesting profiles to enable in the container";
      example = [
        "general"
        "web"
        "network"
        "forensics"
        "exploit"
      ];
    };
  };
  config = mkIf cfg.enable {
    containers.pentesting = {
      autoStart = true;
      privateNetwork = true;
      hostAddress = "192.168.100.2";
      localAddress = "192.168.100.11";

      forwardPorts = [
        {
          containerPort = 22;
          hostPort = 2222;
          protocol = "tcp";
        }
        {
          containerPort = 80;
          hostPort = 8080;
          protocol = "tcp";
        }
      ];

      config =
        let
          get-host-ip = "$(ip route | grep default | cut -d' ' -f3)";
        in
        {
          boot.isContainer = true;

          environment = {
            shellInit = "export DISPLAY=${get-host-ip}:0";
            systemPackages =
              let
                pkgSets = import ./packages/pentest-pkgs.nix { inherit pkgs; };
                enabledPkgSets = builtins.filter (name: builtins.elem name cfg.profiles) (
                  builtins.attrNames pkgSets
                );
                selectedPackages = builtins.concatLists (builtins.map (name: pkgSets.${name}) enabledPkgSets);
              in
              selectedPackages;
          };

          networking = {
            nat = {
              enable = true;
              internalInterfaces = [ "ve-rednix" ];
              externalInterface = "eth0";
            };
            useDHCP = false;
            hostName = "RedNix";
            firewall = {
              enable = true;
              allowPing = true;
              allowedTCPPorts = [ ];
            };
          };

          # nix config
          nix = {
            settings.extra-experimental-features = [
              "nix-command"
              "flakes"
            ];
          };

          # nixpkgs config
          nixpkgs.config = {
            allowUnfree = true;
            allowInsecurePredicate = _p: true;
            segger-jlink.acceptLicense = true;
          };

          # services
          services = {
            getty.autologinUser = "rednix";

            openssh = {
              enable = true;
              settings.X11Forwarding = true;
            };

            avahi = {
              enable = true;
              browseDomains = [ ];
              wideArea = false;
              nssmdns4 = true;
            };

            unbound = {
              enable = true;
              settings.server = { };
            };
          };

          system.stateVersion = "25.05";

          # users
          users.users.rednix = {
            isNormalUser = true;
            uid = 1000;
            description = "RedNix container user";
            initialPassword = "changeme";
            extraGroups = [ "wheel" ];
          };
        };
    };

  };
}
